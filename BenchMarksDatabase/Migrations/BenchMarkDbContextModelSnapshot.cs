// <auto-generated />
using System;
using BenchMarksDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BenchMarksDatabase.Migrations
{
    [DbContext(typeof(BenchMarkDbContext))]
    partial class BenchMarkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BenchMarksDatabase.Entities.TableGuid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("TableGuid");
                });

            modelBuilder.Entity("BenchMarksDatabase.Entities.TableInt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("TableInt");
                });

            modelBuilder.Entity("BenchMarksDatabase.Entities.TableUlid", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(26)");

                    b.HasKey("Id");

                    b.ToTable("TableUlid");
                });

            modelBuilder.Entity("BenchMarksDatabase.Entities.TableUlidBinary", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("TableUlidBinary");
                });
#pragma warning restore 612, 618
        }
    }
}
